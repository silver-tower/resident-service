name: CI Pipeline

on:
  pull_request: # Pull Request 생성 또는 업데이트 시 실행
    branches:
      # main 및 develop 브랜치로 제출된 PR에 이 워크플로우가 작동
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest # Ubuntu 최신 버전 환경에서 실행

    steps:
      # JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3 # GitHub의 설정된 액션을 사용해 JDK 환경 구성
        with:
          distribution: 'temurin' # OpenJDK 배포판 사용
          java-version: 17 # JDK 17 버전 사용

      # 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3 # 레포지토리의 코드를 가상 환경에 가져옴

      # Gradle 캐싱
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 의존성 설치
      - name: Set up dependencies
        run: ./gradlew build  -DskipTests=true
        # 의존성 설치: 테스트를 실행하지 않고 필요한 라이브러리만 다운로드

      # 테스트 실행
      - name: Run tests
        run: ./gradlew test
        # 테스트 실행: 프로젝트 내부의 테스트 코드 실행
        # 테스트 결과를 기반으로 PR 승인 여부가 결정됨

      # 실패시 디버깅 정보 출력
      - name: Display debug information
        if: failure()
        run: cat build/test-results/test/*.xml || true
